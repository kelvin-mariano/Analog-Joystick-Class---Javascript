/**
 * Analog Joystick Class - Javascript
 * Copyright Kelvin Mariano
 * Version: 1.0.0
 * License: The MIT License (MIT)
 * https://github.com/kelvin-mariano/Analog-Joystick-Class---Javascript/blob/main/LICENSE
*/
class JoystickAnalog{constructor(t){this.parentElement=document.querySelector(t.parentElement),this.joystick=document.createElement("div"),this.joystick.id="joystick",this.handle=document.createElement("div"),this.handle.id="handle",this.joystick.appendChild(this.handle),this.parentElement.appendChild(this.joystick),this.joystickRadius=this.joystick.offsetWidth/2,this.dragging=!1,this.pressKeyFunction=t.pressKeyFunction||!1,this.releaseKeysFunction=t.releaseKeysFunction||!1,this.beforePressKey=t.beforePressKey||null,this.afterPressKey=t.afterPressKey||null,this.enableDebug=t.enableDebug||!1,this.beforeReleaseKeys=t.beforeReleaseKeys||null,this.afterReleaseKeys=t.afterReleaseKeys||null,this.initialHandlePosition={x:0,y:0},this.handle.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.handle.addEventListener("touchstart",this.handleTouchStart.bind(this)),document.addEventListener("mouseup",this.handleMouseUp.bind(this)),document.addEventListener("touchend",this.handleTouchEnd.bind(this)),document.addEventListener("mousemove",this.handleMouseMove.bind(this)),document.addEventListener("touchmove",this.handleTouchMove.bind(this)),this.joystick.addEventListener("mouseenter",this.handleMouseEnter.bind(this)),this.joystick.addEventListener("mouseleave",this.handleMouseLeave.bind(this))}handleMouseDown(){this.dragging=!0}handleTouchStart(t){this.dragging=!0,t.preventDefault()}handleMouseUp(){this.dragging=!1,this.handle.style.left="50%",this.handle.style.top="50%",this.releaseKeys()}handleTouchEnd(){this.dragging=!1,this.handle.style.left="50%",this.handle.style.top="50%",this.releaseKeys()}handleMouseMove(t){if(this.dragging){var e=this.joystick.getBoundingClientRect(),o=t.clientX-e.left,n=t.clientY-e.top;this.handlePosition(o,n)}}handleTouchMove(t){if(this.dragging){var e=this.joystick.getBoundingClientRect(),o=t.touches[0].clientX-e.left,n=t.touches[0].clientY-e.top;this.handlePosition(o,n),t.preventDefault()}}handlePosition(t,e){var o=Math.sqrt(Math.pow(t-this.joystickRadius,2)+Math.pow(e-this.joystickRadius,2)),n=Math.atan2(e-this.joystickRadius,t-this.joystickRadius);if(o<=this.joystickRadius)this.handle.style.left=t+"px",this.handle.style.top=e+"px";else{var i=Math.cos(n)*this.joystickRadius+this.joystickRadius,c=Math.sin(n)*this.joystickRadius+this.joystickRadius;this.handle.style.left=i+"px",this.handle.style.top=c+"px"}var s=(t-this.joystickRadius)/this.joystickRadius,a=(e-this.joystickRadius)/this.joystickRadius;this.simulateKeypress(s,a)}handleMouseEnter(){this.joystick.style.cursor="move"}handleMouseLeave(){this.dragging||(this.handle.style.left="50%",this.handle.style.top="50%",this.releaseKeys())}simulateKeypress(t,e){var o=t<-.2,n=t>.2,i=e<-.2,c=e>.2;o?this.pressKey("up"):n?this.pressKey("down"):i?this.pressKey("left"):c?this.pressKey("right"):this.releaseKeys()}pressKey(t){if(this.enableDebug)console.log("Pressing the key: "+t);if(this.beforePressKey)this.beforePressKey(t);if(this.pressKeyFunction!==!1)this.pressKeyFunction(t);else{var e=!1,o=!1;switch(t){case"up":e="ArrowUp",o=38;break;case"down":e="ArrowDown",o=40;break;case"left":e="ArrowLeft",o=37;break;case"right":e="ArrowRight",o=39;break;default:}e&&(new KeyboardEvent("keydown",{key:e,keyCode:o})).dispatchEvent(document)}if(this.afterPressKey)this.afterPressKey(t)}releaseKeys(){if(this.enableDebug)console.log("Releasing all keys");if(this.beforeReleaseKeys)this.beforeReleaseKeys();this.releaseKeysFunction!==!1&&this.releaseKeysFunction();if(this.afterReleaseKeys)this.afterReleaseKeys()}}